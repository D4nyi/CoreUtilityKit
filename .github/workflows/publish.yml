# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish

on: [ workflow_dispatch ]

env:
  BUILD_CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Get Tags
        id: get_latest_release
        uses: octokit/request-action@v2.x
        with:
          mediaType: 'application/json'
          route: GET /repos/${{ github.repository }}/git/matching-refs/tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Store Response
        run: |
          tags=$(tr -d '\n\t\r ' <<<$(echo ${{ toJSON(steps.get_latest_release.outputs.data) }} | sed -e 's/\\n//g'))
          echo "AllTags=${tags}" >> $GITHUB_ENV
      - name: Checkout Git
        uses: actions/checkout@v4
      - name: Build & Test
        uses: D4nyi/NetUtilityKit/.github/actions/build-n-test@ceee9ea91b93aa92cfa54e523cf3301510de0305
        with:
          configuration: ${{ env.BUILD_CONFIGURATION }}
      - name: Pack NetUtilityKit
        run: dotnet pack ./src/NetUtilityKit/NetUtilityKit.csproj -c Release --no-restore -o output
      - name: Pack NetUtilityKit.Validation
        run: dotnet pack ./src/NetUtilityKit.Validation/NetUtilityKit.Validation.csproj -c Release --no-restore -o output
      - name: Update Version
        run: |
          releaseYear=$(date -u +"%Y")
          buildTime=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          versionNetUtilityKit=$(sed -rn "s/\[assembly\: AssemblyVersion\(\"(.*)\"\)\]/\1/p" ./src/NetUtilityKit/Properties/Assembly.cs)
          sed -i -e "s/<Version>/${versionNetUtilityKit}/" -e "s/<BuildTime>/${buildTime}/" -e "s/<ReleaseYear>/${releaseYear}/" ./src/NetUtilityKit/Properties/Assembly.cs
          
          buildTime=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          versionValidation=$(sed -rn "s/\[assembly\: AssemblyVersion\(\"(.*)\"\)\]/\1/p" ./src/NetUtilityKit.Validation/Properties/Assembly.cs)
          sed -i -e "s/<Version>/${versionValidation}/" -e "s/<BuildTime>/${buildTime}/" -e "s/<ReleaseYear>/${releaseYear}/" ./src/NetUtilityKit.Validation/Properties/Assembly.cs
          
          versions="{\"NetUtilityKit\":\"${versionNetUtilityKit}\",\"Validation\":\"${versionValidation}\",\"EnumAttributionCache\":\"\"}"
          echo "Versions=${versions}" >> $GITHUB_ENV
      - name: Git Tag
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const versions = JSON.parse(process.env.Versions);
              const allTags = JSON.parse(process.env.AllTags).map(x => x.ref);
            
              console.log(versions);
              console.log(allTags);
            
              for (const [key, value] of Object.entries(versions)) {
                if (!value) {
                  continue;
                }
            
                const ref = `refs/tags/${key}/v${value}`;
                const exists = allTags.includes(ref);
                console.log(exists ? 'Exists:' : 'Created:', ref);
            
                if (exists) {
                  continue;
                }
            
                github.rest.git.createRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: ref,
                  sha: context.sha
                });
              } 
            } catch (e) {
              console.error(e);
            }
      - name: Push to NuGet
        run: dotnet nuget push output/NetUtilityKit*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate